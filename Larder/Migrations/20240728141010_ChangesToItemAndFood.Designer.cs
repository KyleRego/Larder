// <auto-generated />
using Larder.Repository.Impl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Larder.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240728141010_ChangesToItemAndFood")]
    partial class ChangesToItemAndFood
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("IngredientRecipe", b =>
                {
                    b.Property<string>("IngredientsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipesId")
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientsId", "RecipesId");

                    b.HasIndex("RecipesId");

                    b.ToTable("IngredientRecipe");
                });

            modelBuilder.Entity("Larder.Models.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Larder.Models.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServingsProduced")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FoodId")
                        .IsUnique();

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = "0d294b6d-6883-4124-a28a-3dde92a5222b",
                            FoodId = "5dc36a7a-5952-4c39-9929-daa8ca1229f0",
                            Name = "Rice Roni Low Sodium Chicken Rice",
                            ServingsProduced = 0
                        });
                });

            modelBuilder.Entity("Larder.Models.RecipeIngredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("IngredientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = "5b74f042-251c-457d-919f-21cd5abd8b46",
                            Amount = 1.0,
                            IngredientId = "81afa29e-a66e-42bd-be65-e018e013c2f0",
                            RecipeId = "0d294b6d-6883-4124-a28a-3dde92a5222b",
                            UnitId = "efe87fe5-76f4-4336-b518-4969a49fa9b3"
                        },
                        new
                        {
                            Id = "0e068f09-7dcf-4f9a-bd6e-40f862d17ddb",
                            Amount = 2.5,
                            IngredientId = "ad45bd9e-c57e-41f4-8c97-98ee5cdb68f4",
                            RecipeId = "0d294b6d-6883-4124-a28a-3dde92a5222b",
                            UnitId = "f6ae43bf-b609-4ca1-9fc5-7a53cce510e9"
                        },
                        new
                        {
                            Id = "7246901f-e77a-48a3-a158-fb53ff6d320d",
                            Amount = 1.0,
                            IngredientId = "914703d9-1912-4161-a6a5-cf8c3c2bc3db",
                            RecipeId = "0d294b6d-6883-4124-a28a-3dde92a5222b"
                        });
                });

            modelBuilder.Entity("Larder.Models.Unit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = "b69b5770-ecd2-40c7-aaa3-35ba64b25cbb",
                            Name = "Liters",
                            Type = 1
                        },
                        new
                        {
                            Id = "32dfd085-43d7-4b1a-8449-4939c4d577de",
                            Name = "Pounds",
                            Type = 2
                        },
                        new
                        {
                            Id = "01aa7844-385b-4213-ba3e-e7bae25ed859",
                            Name = "Grams",
                            Type = 0
                        },
                        new
                        {
                            Id = "bbd550f8-9e64-4994-822b-973335287850",
                            Name = "Milliliters",
                            Type = 1
                        },
                        new
                        {
                            Id = "efe87fe5-76f4-4336-b518-4969a49fa9b3",
                            Name = "Tablespoons",
                            Type = 1
                        },
                        new
                        {
                            Id = "f6ae43bf-b609-4ca1-9fc5-7a53cce510e9",
                            Name = "Cups",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Larder.Models.Food", b =>
                {
                    b.HasBaseType("Larder.Models.Item");

                    b.Property<int>("Calories")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.ToTable("Items", t =>
                        {
                            t.Property("Quantity")
                                .HasColumnName("Food_Quantity");
                        });

                    b.HasDiscriminator().HasValue("Food");

                    b.HasData(
                        new
                        {
                            Id = "5dc36a7a-5952-4c39-9929-daa8ca1229f0",
                            Name = "Chicken and rice",
                            Calories = 0,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("Larder.Models.Ingredient", b =>
                {
                    b.HasBaseType("Larder.Models.Item");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("UnitId")
                        .HasColumnType("TEXT");

                    b.HasIndex("UnitId");

                    b.HasDiscriminator().HasValue("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = "81afa29e-a66e-42bd-be65-e018e013c2f0",
                            Name = "Butter",
                            Quantity = 0.0
                        },
                        new
                        {
                            Id = "ad45bd9e-c57e-41f4-8c97-98ee5cdb68f4",
                            Name = "Water",
                            Quantity = 0.0
                        },
                        new
                        {
                            Id = "914703d9-1912-4161-a6a5-cf8c3c2bc3db",
                            Name = "Rice Roni Chicken Lower Sodium box",
                            Quantity = 0.0
                        });
                });

            modelBuilder.Entity("Larder.Models.Utensil", b =>
                {
                    b.HasBaseType("Larder.Models.Item");

                    b.HasDiscriminator().HasValue("Utensil");
                });

            modelBuilder.Entity("IngredientRecipe", b =>
                {
                    b.HasOne("Larder.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Larder.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Larder.Models.Recipe", b =>
                {
                    b.HasOne("Larder.Models.Food", "Food")
                        .WithOne("Recipe")
                        .HasForeignKey("Larder.Models.Recipe", "FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Larder.Models.RecipeIngredient", b =>
                {
                    b.HasOne("Larder.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Larder.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Larder.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Larder.Models.Ingredient", b =>
                {
                    b.HasOne("Larder.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Larder.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Larder.Models.Food", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Larder.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
